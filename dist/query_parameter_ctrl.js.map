{"version":3,"sources":["../src/query_parameter_ctrl.js"],"names":["angular","_","module","directive","templateUrl","controller","restrict","scope","target","datasource","panelType","isLastQuery","onChange","$scope","init","query","aliasFormat","format","getDefaultFormat","formats","text","value"],"mappings":";;;;;;;;;AAAOA,a;;AACAC,O;;;;AAEPD,cAAQE,MAAR,CAAe,oBAAf,EAAqCC,SAArC,CAA+C,yBAA/C,EAA0E,YAAM;AAC9E,eAAO;AACLC,uBAAa,0EADR;AAELC,sBAAY,6BAFP;AAGLC,oBAAU,GAHL;AAILC,iBAAO;AACLC,oBAAQ,GADH;AAELC,wBAAY,GAFP;AAGLC,uBAAW,GAHN;AAILC,yBAAa,GAJR;AAKLC,sBAAU;AALL;AAJF,SAAP;AAYD,OAbD;;AAeAZ,cAAQE,MAAR,CAAe,qBAAf,EAAsCG,UAAtC,CAAiD,6BAAjD,EAAgF,UAACQ,MAAD,EAAY;AAC1FA,eAAOC,IAAP,GAAc,YAAY;AACxB,cAAIN,SAASK,OAAOL,MAApB;AACAA,iBAAOO,KAAP,GAAeP,OAAOO,KAAP,IAAgB,EAA/B;AACAP,iBAAOQ,WAAP,GAAqBR,OAAOQ,WAAP,IAAsB,EAA3C;AACAR,iBAAOS,MAAP,GAAgBT,OAAOS,MAAP,IAAiBJ,OAAOK,gBAAP,EAAjC;;AAEA,eAAKC,OAAL,GAAe,CACb,EAAEC,MAAM,uBAAR,EAAiCC,OAAO,qBAAxC,EADa,EAEb,EAAED,MAAM,SAAR,EAAmBC,OAAO,SAA1B,EAFa,EAGb,EAAED,MAAM,UAAR,EAAoBC,OAAO,UAA3B,EAHa,CAAf;;AAMA,cAAI,CAACR,OAAOD,QAAZ,EAAsB;AACpBC,mBAAOD,QAAP,GAAkB,YAAY,CAAG,CAAjC;AACD;AACF,SAfD;;AAiBAC,eAAOK,gBAAP,GAA0B,YAAW;AACnC,cAAI,KAAKR,SAAL,KAAmB,OAAvB,EAAgC;AAC9B,mBAAO,SAAP;AACD;AACD,iBAAO,qBAAP;AACD,SALD;;AAOAG,eAAOC,IAAP;AACD,OA1BD","file":"query_parameter_ctrl.js","sourcesContent":["import angular from 'angular';\nimport _ from 'lodash';\n\nangular.module('grafana.directives').directive('sumologicQueryParameter', () => {\n  return {\n    templateUrl: 'public/plugins/mtanda-sumologic-datasource/partials/query.parameter.html',\n    controller: 'SumologicQueryParameterCtrl',\n    restrict: 'E',\n    scope: {\n      target: \"=\",\n      datasource: \"=\",\n      panelType: \"=\",\n      isLastQuery: \"=\",\n      onChange: \"&\",\n    }\n  };\n});\n\nangular.module('grafana.controllers').controller('SumologicQueryParameterCtrl', ($scope) => {\n  $scope.init = function () {\n    let target = $scope.target;\n    target.query = target.query || '';\n    target.aliasFormat = target.aliasFormat || '';\n    target.format = target.format || $scope.getDefaultFormat();\n\n    this.formats = [\n      { text: 'Time series (Records)', value: 'time_series_records' },\n      { text: 'Records', value: 'records' },\n      { text: 'Messages', value: 'messages' },\n    ];\n\n    if (!$scope.onChange) {\n      $scope.onChange = function () { };\n    }\n  };\n\n  $scope.getDefaultFormat = function() {\n    if (this.panelType === 'table') {\n      return 'records';\n    }\n    return 'time_series_records';\n  };\n\n  $scope.init();\n});\n"]}